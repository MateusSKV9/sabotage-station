>>>GERAL:
PARA A ADIÇÃO DO TAMANHO EXATO DOS MAPAS E IMAGENS:
O frame.setSize conta a barra de titulo, minimizar e fechar na contagem dos pixels. Significa que não sabemos a altura exata da Janela. Ex: 400x500, seria 400 - ?px.
Necessário que um “Panel-Pai” seja responsável por definir o tamanho exato aproveitavel do jogo, e o Frame que acompanhe.





Se possível, classe Objetos, alem de sua propria imagem, colisão, posição e efeitos, já carrega um metodo para "se mostrar", sem necessidade de terceiros. Basta chamar um objeto em um Panel, passando sua posição, que ela aparece na tela.



(Marcus)--___________________________________--

OBJETIVO:
Cada Level terá uma classe própria (provavelmente um Panel) com suas próprias configurações.

Devemos usar LevelLoader para primeiramente enviar a imagem do Level, que processará a cor de cada Tile da imagem, e criará o Level fisicamente, substituindo a cor do Tile pelo Objeto, e inicializando a fase.
Essa criação deve acontecer retornando a coordenada (x, y) e o tipo de Objeto em cada espaço. (por isso necessitamos de objetos já criados com suas colisões, efeitos, etc)
[ ! ] Como precisamos personalizar todas as fases, como intensidade de pistão, movimento de barreiras e objetos, etc, então precisamos ter o código da localização dos objetos acessivel. Portanto, o LevelLoader deve retornar o código com as coordernadas de cada objeto criado, para fazermos as devidas configurações.

Com isso, devemos colocar esse código dentro das classes dos Levels

[ ! ? ] -> Os códigos comentados são rascunhos e ideias que o tutorial apresentou. Devo adaptar esses codigos ou reutiliza-los para nossas ideias. 

LevelLoader (Leitor da imagem):
- carregar a img como um buffered
- dividir a img em tiles de 50x50px
-  ler a cor DO CENTRO do tile, pra evitar erros de precisão

Criar objeto e seus parametros

TRASNFORMAR EM OBJETO
- Identifica o obj pelo tipo
- criarObj() usa Switch case pra facilitar visualizaçao simples do codigo:
    > Recebe o tipo e a posição
    > Se for tipo TAL, adiciona na posição

- envia de volta para a main, onde chama criarObj() pra ser adicionado simultaneamente a cada leitura de pixel/tile

CHAMAR A CLASSE/PASSAR PARAMETROS DENTRO DE CADA LEVEL
